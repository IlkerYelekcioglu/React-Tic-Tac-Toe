{"ast":null,"code":"var _jsxFileName = \"/Users/ilkeryelekcioglu/Desktop/tic-tac-toe/src/components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAYER_X = \"X\";\nconst PLAYER_O = \"O\";\nconst winningCombinations = [\n//Rows\n{\n  combo: [0, 1, 2],\n  strikeClass: \"strike-row-1\"\n}, {\n  combo: [3, 4, 5],\n  strikeClass: \"strike-row-2\"\n}, {\n  combo: [6, 7, 8],\n  strikeClass: \"strike-row-3\"\n},\n//Columns\n{\n  combo: [0, 3, 6],\n  strikeClass: \"strike-row-1\"\n}, {\n  combo: [1, 4, 7],\n  strikeClass: \"strike-row-2\"\n}, {\n  combo: [2, 5, 8],\n  strikeClass: \"strike-row-3\"\n},\n//Diagonals\n{\n  combo: [0, 4, 8],\n  strikeClass: \"strike-diagonal-1\"\n}, {\n  combo: [2, 4, 8],\n  strikeClass: \"strike-diagonal-2\"\n}];\nfunction checkWinner(tiles, setStrikeClass, setGameState) {\n  for (const {\n    combo,\n    strikeClass\n  } of winningCombinations) {\n    const tileValue1 = tiles[combo[0]];\n    const tileValue2 = tiles[combo[1]];\n    const tileValue3 = tiles[combo[2]];\n    if (tileValue1 !== null && tileValue1 === tileValue2 && tileValue1 === tileValue3) {\n      setStrikeClass(strikeClass);\n      if (tileValue1 === PLAYER_X) {\n        setGameState(GameState.playerXWins);\n      } else {\n        setGameState(GameState.playerOWins);\n      }\n      return;\n    }\n  }\n  const areAllTilesFilledIn = tiles.every(tile => tile !== null);\n  if (areAllTilesFilledIn) {\n    setGameState(GameState.draw);\n  }\n}\nfunction TicTacToe() {\n  _s();\n  const [tiles, setTiles] = useState(Array(9).fill(null));\n  const [playerTurn, setPlayerTurn] = useState(PLAYER_X);\n  const [strikeClass, setStrikeClass] = useState();\n  const [gameState, setGameState] = useState(GameState.inProgresss);\n  useEffect(() => {\n    checkWinner(tiles, setStrikeClass, setGameState);\n  }, [tiles]);\n  const handleTileClick = index => {\n    if (gameState !== GameState.inProgress) {\n      return;\n    }\n    if (tiles[index] !== null) {\n      return;\n    }\n    const newTiles = [...tiles];\n    newTiles[index] = playerTurn;\n    setTiles(newTiles);\n    if (playerTurn === PLAYER_X) {\n      setPlayerTurn(PLAYER_O);\n    } else {\n      setPlayerTurn(PLAYER_X);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      playerTurn: playerTurn,\n      tiles: tiles,\n      onTileClick: handleTileClick,\n      strikeClass: strikeClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 1\n  }, this);\n}\n_s(TicTacToe, \"gji3hBAWBfsU2JAvm5baWGMl7ok=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["useEffect","useState","Board","GameOver","GameState","Reset","jsxDEV","_jsxDEV","PLAYER_X","PLAYER_O","winningCombinations","combo","strikeClass","checkWinner","tiles","setStrikeClass","setGameState","tileValue1","tileValue2","tileValue3","playerXWins","playerOWins","areAllTilesFilledIn","every","tile","draw","TicTacToe","_s","setTiles","Array","fill","playerTurn","setPlayerTurn","gameState","inProgresss","handleTileClick","index","inProgress","newTiles","children","fileName","_jsxFileName","lineNumber","columnNumber","onTileClick","_c","$RefreshReg$"],"sources":["/Users/ilkeryelekcioglu/Desktop/tic-tac-toe/src/components/TicTacToe.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\n\nconst PLAYER_X = \"X\";\nconst PLAYER_O = \"O\";\n\nconst winningCombinations = [\n//Rows\n{combo:[0,1,2],strikeClass:\"strike-row-1\"},\n{combo:[3,4,5],strikeClass:\"strike-row-2\"},\n{combo:[6,7,8],strikeClass:\"strike-row-3\"},\n//Columns\n{combo:[0,3,6],strikeClass:\"strike-row-1\"},\n{combo:[1,4,7],strikeClass:\"strike-row-2\"},\n{combo:[2,5,8],strikeClass:\"strike-row-3\"},\n//Diagonals\n{combo:[0,4,8],strikeClass:\"strike-diagonal-1\"},\n{combo:[2,4,8],strikeClass:\"strike-diagonal-2\"},\n\n\n];\n\nfunction checkWinner(tiles,setStrikeClass,setGameState){\nfor (const {combo,strikeClass} of winningCombinations){\n    const tileValue1 = tiles[combo[0]];\n    const tileValue2 = tiles[combo[1]];\n    const tileValue3 = tiles[combo[2]];\n   if(tileValue1 !== null && tileValue1 === tileValue2 && tileValue1 === tileValue3) {\n    setStrikeClass(strikeClass);\n    if(tileValue1 ===PLAYER_X){\n        setGameState(GameState.playerXWins);\n    }else{\n        setGameState(GameState.playerOWins)\n    }\n    return;\n   }\n}\nconst areAllTilesFilledIn = tiles.every((tile)=>tile !== null);\n    if(areAllTilesFilledIn){\n        setGameState(GameState.draw);\n}\n\n}\n\n\nfunction TicTacToe(){\n    const [tiles,setTiles] = useState(Array(9).fill(null));\n    const [playerTurn,setPlayerTurn] = useState(PLAYER_X);\n    const [strikeClass, setStrikeClass] = useState();\n    const [gameState,setGameState] = useState(GameState.inProgresss);\n\n    useEffect(()=> {\n        checkWinner(tiles,setStrikeClass,setGameState);\n    },[tiles]); \n \n    const handleTileClick = (index) => {\n\n        if(gameState!== GameState.inProgress){\n            return; \n        }\n\n        if(tiles[index] !== null){\n            return;\n        }\n        const newTiles = [...tiles];\n        newTiles[index] = playerTurn;\n        setTiles(newTiles);\n        if(playerTurn === PLAYER_X){\n            setPlayerTurn(PLAYER_O);\n        }else{\n            setPlayerTurn(PLAYER_X)\n        }\n    };\n\nreturn(\n<div>\n    <h1>Tic Tac Toe</h1>\n    <Board \n        playerTurn= {playerTurn}\n        tiles = {tiles} \n        onTileClick= {handleTileClick}\n        strikeClass = {strikeClass}\n    />\n    <GameOver  gameState={gameState}/>\n    <Reset />\n</div>\n);\n}\n\nexport default TicTacToe;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAG,GAAG;AACpB,MAAMC,QAAQ,GAAG,GAAG;AAEpB,MAAMC,mBAAmB,GAAG;AAC5B;AACA;EAACC,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAACC,WAAW,EAAC;AAAc,CAAC,EAC1C;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAACC,WAAW,EAAC;AAAc,CAAC,EAC1C;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAACC,WAAW,EAAC;AAAc,CAAC;AAC1C;AACA;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAACC,WAAW,EAAC;AAAc,CAAC,EAC1C;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAACC,WAAW,EAAC;AAAc,CAAC,EAC1C;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAACC,WAAW,EAAC;AAAc,CAAC;AAC1C;AACA;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAACC,WAAW,EAAC;AAAmB,CAAC,EAC/C;EAACD,KAAK,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAACC,WAAW,EAAC;AAAmB,CAAC,CAG9C;AAED,SAASC,WAAWA,CAACC,KAAK,EAACC,cAAc,EAACC,YAAY,EAAC;EACvD,KAAK,MAAM;IAACL,KAAK;IAACC;EAAW,CAAC,IAAIF,mBAAmB,EAAC;IAClD,MAAMO,UAAU,GAAGH,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,MAAMO,UAAU,GAAGJ,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,MAAMQ,UAAU,GAAGL,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,IAAGM,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAKC,UAAU,IAAID,UAAU,KAAKE,UAAU,EAAE;MACjFJ,cAAc,CAACH,WAAW,CAAC;MAC3B,IAAGK,UAAU,KAAIT,QAAQ,EAAC;QACtBQ,YAAY,CAACZ,SAAS,CAACgB,WAAW,CAAC;MACvC,CAAC,MAAI;QACDJ,YAAY,CAACZ,SAAS,CAACiB,WAAW,CAAC;MACvC;MACA;IACD;EACH;EACA,MAAMC,mBAAmB,GAAGR,KAAK,CAACS,KAAK,CAAEC,IAAI,IAAGA,IAAI,KAAK,IAAI,CAAC;EAC1D,IAAGF,mBAAmB,EAAC;IACnBN,YAAY,CAACZ,SAAS,CAACqB,IAAI,CAAC;EACpC;AAEA;AAGA,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAChB,MAAM,CAACb,KAAK,EAACc,QAAQ,CAAC,GAAG3B,QAAQ,CAAC4B,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtD,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAG/B,QAAQ,CAACO,QAAQ,CAAC;EACrD,MAAM,CAACI,WAAW,EAAEG,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACgC,SAAS,EAACjB,YAAY,CAAC,GAAGf,QAAQ,CAACG,SAAS,CAAC8B,WAAW,CAAC;EAEhElC,SAAS,CAAC,MAAK;IACXa,WAAW,CAACC,KAAK,EAACC,cAAc,EAACC,YAAY,CAAC;EAClD,CAAC,EAAC,CAACF,KAAK,CAAC,CAAC;EAEV,MAAMqB,eAAe,GAAIC,KAAK,IAAK;IAE/B,IAAGH,SAAS,KAAI7B,SAAS,CAACiC,UAAU,EAAC;MACjC;IACJ;IAEA,IAAGvB,KAAK,CAACsB,KAAK,CAAC,KAAK,IAAI,EAAC;MACrB;IACJ;IACA,MAAME,QAAQ,GAAG,CAAC,GAAGxB,KAAK,CAAC;IAC3BwB,QAAQ,CAACF,KAAK,CAAC,GAAGL,UAAU;IAC5BH,QAAQ,CAACU,QAAQ,CAAC;IAClB,IAAGP,UAAU,KAAKvB,QAAQ,EAAC;MACvBwB,aAAa,CAACvB,QAAQ,CAAC;IAC3B,CAAC,MAAI;MACDuB,aAAa,CAACxB,QAAQ,CAAC;IAC3B;EACJ,CAAC;EAEL,oBACAD,OAAA;IAAAgC,QAAA,gBACIhC,OAAA;MAAAgC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBpC,OAAA,CAACL,KAAK;MACF6B,UAAU,EAAGA,UAAW;MACxBjB,KAAK,EAAIA,KAAM;MACf8B,WAAW,EAAGT,eAAgB;MAC9BvB,WAAW,EAAIA;IAAY;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFpC,OAAA,CAACJ,QAAQ;MAAE8B,SAAS,EAAEA;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClCpC,OAAA,CAACF,KAAK;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEN;AAAChB,EAAA,CA1CQD,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA4ClB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
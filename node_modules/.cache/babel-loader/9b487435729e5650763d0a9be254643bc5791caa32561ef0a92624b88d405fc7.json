{"ast":null,"code":"var _jsxFileName = \"/Users/ilkeryelekcioglu/Desktop/tic-tac-toe/src/components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAYER_X = \"X\";\nconst PLAYER_O = \"O\";\nconst winningCombinations = [\n//Rows\n{\n  combo: [0, 1, 2],\n  strikeClass: \"strike-row-1\"\n}, {\n  combo: [3, 4, 5],\n  strikeClass: \"strike-row-2\"\n}, {\n  combo: [6, 7, 8],\n  strikeClass: \"strike-row-3\"\n},\n//Columns\n{\n  combo: [0, 3, 6],\n  strikeClass: \"strike-row-1\"\n}, {\n  combo: [1, 4, 7],\n  strikeClass: \"strike-row-2\"\n}, {\n  combo: [2, 5, 8],\n  strikeClass: \"strike-row-3\"\n},\n//Diagonals\n{\n  combo: [0, 4, 8],\n  strikeClass: \"strike-diagonal-1\"\n}, {\n  combo: [2, 4, 8],\n  strikeClass: \"strike-diagonal-2\"\n}];\nfunction checkWinner(tiles, setStrikeClass) {\n  for (const {\n    combo,\n    strikeClass\n  } of winningCombinations) {\n    const tileValue1 = tiles[combo[0]];\n    const tileValue2 = tiles[combo[1]];\n    const tileValue3 = tiles[combo[2]];\n    if (tileValue1 !== null && tileValue1 === tileValue2 && tileValue1 === tileValue3) {\n      setStrikeClass(strikeClass);\n    }\n  }\n}\nfunction TicTacToe() {\n  _s();\n  const [tiles, setTiles] = useState(Array(9).fill(null));\n  const [playerTurn, setPlayerTurn] = useState(PLAYER_X);\n  const [strikeClass, setStrikeClass] = useState();\n  const [gameState, setGameState] = useState();\n  useEffect(() => {\n    checkWinner(tiles, setStrikeClass);\n  }, [tiles]);\n  const handleTileClick = index => {\n    if (tiles[index] !== null) {\n      return;\n    }\n    const newTiles = [...tiles];\n    newTiles[index] = playerTurn;\n    setTiles(newTiles);\n    if (playerTurn === PLAYER_X) {\n      setPlayerTurn(PLAYER_O);\n    } else {\n      setPlayerTurn(PLAYER_X);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      playerTurn: playerTurn,\n      tiles: tiles,\n      onTileClick: handleTileClick,\n      strikeClass: strikeClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 1\n  }, this);\n}\n_s(TicTacToe, \"Xgi/go82dqyCtYYF7DhtnAd61e8=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["useEffect","useState","Board","GameOver","GameState","jsxDEV","_jsxDEV","PLAYER_X","PLAYER_O","winningCombinations","combo","strikeClass","checkWinner","tiles","setStrikeClass","tileValue1","tileValue2","tileValue3","TicTacToe","_s","setTiles","Array","fill","playerTurn","setPlayerTurn","gameState","setGameState","handleTileClick","index","newTiles","children","fileName","_jsxFileName","lineNumber","columnNumber","onTileClick","_c","$RefreshReg$"],"sources":["/Users/ilkeryelekcioglu/Desktop/tic-tac-toe/src/components/TicTacToe.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\n\nconst PLAYER_X = \"X\";\nconst PLAYER_O = \"O\";\n\nconst winningCombinations = [\n//Rows\n{combo:[0,1,2],strikeClass:\"strike-row-1\"},\n{combo:[3,4,5],strikeClass:\"strike-row-2\"},\n{combo:[6,7,8],strikeClass:\"strike-row-3\"},\n//Columns\n{combo:[0,3,6],strikeClass:\"strike-row-1\"},\n{combo:[1,4,7],strikeClass:\"strike-row-2\"},\n{combo:[2,5,8],strikeClass:\"strike-row-3\"},\n//Diagonals\n{combo:[0,4,8],strikeClass:\"strike-diagonal-1\"},\n{combo:[2,4,8],strikeClass:\"strike-diagonal-2\"},\n\n\n];\n\nfunction checkWinner(tiles,setStrikeClass){\nfor (const {combo,strikeClass} of winningCombinations){\n    const tileValue1 = tiles[combo[0]];\n    const tileValue2 = tiles[combo[1]];\n    const tileValue3 = tiles[combo[2]];\n   if(tileValue1 !== null && tileValue1 === tileValue2 && tileValue1 === tileValue3) {\n    setStrikeClass(strikeClass);\n   }\n}\n}\n\nfunction TicTacToe(){\n    const [tiles,setTiles] = useState(Array(9).fill(null));\n    const [playerTurn,setPlayerTurn] = useState(PLAYER_X);\n    const [strikeClass, setStrikeClass] = useState();\n    const [gameState,setGameState] = useState();\n\n    useEffect(()=> {\n        checkWinner(tiles,setStrikeClass);\n    },[tiles]); \n \n    const handleTileClick = (index) => {\n        if(tiles[index] !== null){\n            return;\n        }\n        const newTiles = [...tiles];\n        newTiles[index] = playerTurn;\n        setTiles(newTiles);\n        if(playerTurn === PLAYER_X){\n            setPlayerTurn(PLAYER_O);\n        }else{\n            setPlayerTurn(PLAYER_X)\n        }\n    };\n\nreturn(\n<div>\n    <h1>Tic Tac Toe</h1>\n    <Board \n        playerTurn= {playerTurn}\n        tiles = {tiles} \n        onTileClick= {handleTileClick}\n        strikeClass = {strikeClass}\n    />\n    <GameOver />\n</div>\n);\n}\n\nexport default TicTacToe;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}